const axios = require('axios');

async function simpleFinalTest() {
  console.log('๐ฏ === ุงุฎุชุจุงุฑ ุจุณูุท ููุงุฆู ===\n');
  console.log('๐ง ุงุฎุชุจุงุฑ ุงูุญุงูุฉ ุงููุญูุฏุฉ ุงููุคููุฉ ูููุณูุท\n');

  const baseURL = 'https://montajati-backend.onrender.com';
  
  try {
    console.log('โฐ ุงูุชุธุงุฑ 30 ุซุงููุฉ ููุชุฃูุฏ ูู ุชุทุจูู ุงูุชุบููุฑุงุช ุนูู Render...\n');
    await new Promise(resolve => setTimeout(resolve, 30000));
    
    // ุงุฎุชุจุงุฑ ูุงุญุฏ ููุท - ุงูุญุงูุฉ ุงููุคููุฉ
    console.log('๐งช ุงุฎุชุจุงุฑ ุงูุญุงูุฉ ุงููุคููุฉ: ุงูุฑูู "3"');
    console.log('   ๐ ูุฌุจ ุฃู ูุชุญูู ุฅูู: "ููุฏ ุงูุชูุตูู ุงูู ุงูุฒุจูู (ูู ุนูุฏุฉ ุงูููุฏูุจ)"');
    console.log('   ๐ฆ ูุฌุจ ุฃู ูุฑุณู ูููุณูุท: โ ูุนู\n');
    
    // ุฅูุดุงุก ุทูุจ ุฌุฏูุฏ
    const newOrderData = {
      customer_name: 'ุงุฎุชุจุงุฑ ููุงุฆู ุจุณูุท',
      primary_phone: '07901234567',
      customer_address: 'ุจุบุฏุงุฏ - ุงููุฑุฎ - ุงุฎุชุจุงุฑ ููุงุฆู',
      province: 'ุจุบุฏุงุฏ',
      city: 'ุงููุฑุฎ',
      subtotal: 25000,
      delivery_fee: 5000,
      total: 30000,
      profit: 5000,
      profit_amount: 5000,
      status: 'active',
      user_id: 'bba1fc61-3db9-4c5f-8b19-d8689251990d',
      user_phone: '07503597589',
      order_number: `ORD-FINAL-${Date.now()}`,
      notes: 'ุงุฎุชุจุงุฑ ููุงุฆู ุจุณูุท'
    };
    
    console.log('๐ฆ ุฅูุดุงุก ุทูุจ ุฌุฏูุฏ...');
    const createResponse = await axios.post(`${baseURL}/api/orders`, newOrderData, {
      headers: {
        'Content-Type': 'application/json'
      },
      timeout: 30000
    });
    
    if (createResponse.data.success) {
      const orderId = createResponse.data.data.id;
      console.log(`โ ุชู ุฅูุดุงุก ุงูุทูุจ: ${orderId}\n`);
      
      // ุชุญุฏูุซ ุงูุญุงูุฉ ุฅูู "3"
      const updateData = {
        status: '3',
        notes: 'ุงุฎุชุจุงุฑ ููุงุฆู - ุชุญููู ุงูุฑูู 3',
        changedBy: 'final_test'
      };
      
      console.log('๐ค ุชุญุฏูุซ ุญุงูุฉ ุงูุทูุจ ุฅูู "3"...');
      
      const updateResponse = await axios.put(
        `${baseURL}/api/orders/${orderId}/status`,
        updateData,
        {
          headers: {
            'Content-Type': 'application/json'
          },
          timeout: 60000
        }
      );
      
      console.log(`๐ฅ ูุชูุฌุฉ ุงูุชุญุฏูุซ:`);
      console.log(`   Status: ${updateResponse.status}`);
      console.log(`   Success: ${updateResponse.data.success}`);
      console.log(`   Message: ${updateResponse.data.message}\n`);
      
      if (updateResponse.data.success) {
        console.log('โ ุชู ุชุญุฏูุซ ุงูุญุงูุฉ ุจูุฌุงุญ!\n');
        
        // ุงูุชุธุงุฑ ูุตูุฑ ุซู ูุญุต ุงููุชูุฌุฉ
        console.log('โฐ ุงูุชุธุงุฑ 15 ุซุงููุฉ ููุนุงูุฌุฉ ุงูุทูุจ...\n');
        await new Promise(resolve => setTimeout(resolve, 15000));
        
        console.log('๐ ูุญุต ุงููุชูุฌุฉ ุงูููุงุฆูุฉ...');
        const ordersResponse = await axios.get(`${baseURL}/api/orders`, { timeout: 15000 });
        const updatedOrder = ordersResponse.data.data.find(o => o.id === orderId);
        
        if (updatedOrder) {
          console.log(`๐ ุงููุชูุฌุฉ ุงูููุงุฆูุฉ:`);
          console.log(`   ๐ ุงูุญุงูุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: "${updatedOrder.status}"`);
          console.log(`   ๐ ูุนุฑู ุงููุณูุท: ${updatedOrder.waseet_order_id || 'ุบูุฑ ูุญุฏุฏ'}`);
          console.log(`   ๐ฆ ุญุงูุฉ ุงููุณูุท: ${updatedOrder.waseet_status || 'ุบูุฑ ูุญุฏุฏ'}\n`);
          
          // ูุญุต ุงููุชูุฌุฉ
          const expectedStatus = 'ููุฏ ุงูุชูุตูู ุงูู ุงูุฒุจูู (ูู ุนูุฏุฉ ุงูููุฏูุจ)';
          const statusCorrect = updatedOrder.status === expectedStatus;
          const hasWaseetId = updatedOrder.waseet_order_id && updatedOrder.waseet_order_id !== 'null';
          
          console.log('๐งช ุชุญููู ุงููุชุงุฆุฌ:');
          console.log(`   ๐ ุชุญููู ุงูุญุงูุฉ: ${statusCorrect ? 'โ ุตุญูุญ' : 'โ ุฎุงุทุฆ'}`);
          console.log(`   ๐ฆ ุฅุฑุณุงู ูููุณูุท: ${hasWaseetId ? 'โ ุชู' : 'โ ูู ูุชู'}\n`);
          
          if (statusCorrect && hasWaseetId) {
            console.log('๐ === ุงููุฌุงุญ ุงููุงูู! ===');
            console.log('โ ุงูุฑูู "3" ุชู ุชุญูููู ุจูุฌุงุญ');
            console.log('โ ุชู ุฅุฑุณุงู ุงูุทูุจ ูููุณูุท');
            console.log(`โ QR ID: ${updatedOrder.waseet_order_id}`);
            
            // ูุญุต ุฑุงุจุท ุงููุณูุท
            if (updatedOrder.waseet_data) {
              try {
                const waseetData = JSON.parse(updatedOrder.waseet_data);
                if (waseetData.waseetResponse && waseetData.waseetResponse.data && waseetData.waseetResponse.data.qr_link) {
                  console.log(`โ ุฑุงุจุท ุงููุณูุท: ${waseetData.waseetResponse.data.qr_link}`);
                }
              } catch (e) {
                // ุชุฌุงูู ุฃุฎุทุงุก ุงูุชุญููู
              }
            }
            
            console.log('\n๐ ุชูุงูููุง! ุงููุดููุฉ ูุญูููุฉ ุจุงููุงูู!');
            console.log('๐ฑ ููููู ุงูุขู ุงุณุชุฎุฏุงู ุงูุชุทุจูู ุจุซูุฉ');
            console.log('๐น ุบูุฑ ุญุงูุฉ ุฃู ุทูุจ ุฅูู ุงูุฑูู "3"');
            console.log('๐น ุณุชุธูุฑ ูุนุฑู ุงููุณูุท ุชููุงุฆูุงู');
            console.log('๐น ููููู ูุชุญ ุฑุงุจุท ุงููุณูุท ููุทุจุงุนุฉ');
            
          } else {
            console.log('โ === ููุงู ูุดููุฉ ===');
            if (!statusCorrect) {
              console.log(`โ ุงูุญุงูุฉ ุฎุงุทุฆุฉ: ูุชููุน "${expectedStatus}" ููู ุญุตูุช ุนูู "${updatedOrder.status}"`);
            }
            if (!hasWaseetId) {
              console.log('โ ูู ูุชู ุฅุฑุณุงู ุงูุทูุจ ูููุณูุท');
            }
            console.log('๐ ูุฏ ุชุญุชุงุฌ ูุงูุชุธุงุฑ ุงููุฒูุฏ ุฃู ูุฑุงุฌุนุฉ ุงูููุฏ');
          }
        } else {
          console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุทูุจ ุงููุญุฏุซ');
        }
      } else {
        console.log(`โ ูุดู ูู ุชุญุฏูุซ ุงูุญุงูุฉ: ${updateResponse.data.error}`);
      }
    } else {
      console.log('โ ูุดู ูู ุฅูุดุงุก ุงูุทูุจ');
    }
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error.message);
    
    if (error.code === 'ECONNABORTED') {
      console.log('โฐ ุงูุชูุช ูููุฉ ุงูุงุชุตุงู - ูุฏ ูููู ุงูุฎุงุฏู ุจุทูุก');
      console.log('๐ก ุฌุฑุจ ุงูุงุฎุชุจุงุฑ ูุฑุฉ ุฃุฎุฑู ุจุนุฏ ุฏูุงุฆู ููููุฉ');
    }
  }
}

simpleFinalTest();
