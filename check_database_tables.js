const axios = require('axios');

async function checkDatabaseTables() {
  console.log('๐ === ูุญุต ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ===\n');
  console.log('๐ฏ ุงูุชุญูู ูู ูุฌูุฏ ุฌุฏูู order_status_history\n');

  const baseURL = 'https://montajati-backend.onrender.com';
  
  try {
    // ุฅูุดุงุก ุทูุจ ุฌุฏูุฏ
    const newOrderData = {
      customer_name: 'ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช',
      primary_phone: '07901234567',
      customer_address: 'ุจุบุฏุงุฏ - ุงููุฑุฎ - ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช',
      province: 'ุจุบุฏุงุฏ',
      city: 'ุงููุฑุฎ',
      subtotal: 25000,
      delivery_fee: 5000,
      total: 30000,
      profit: 5000,
      profit_amount: 5000,
      status: 'active',
      user_id: 'bba1fc61-3db9-4c5f-8b19-d8689251990d',
      user_phone: '07503597589',
      order_number: `ORD-DBCHECK-${Date.now()}`,
      notes: 'ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช'
    };
    
    const createResponse = await axios.post(`${baseURL}/api/orders`, newOrderData, {
      headers: {
        'Content-Type': 'application/json'
      },
      timeout: 30000
    });
    
    if (createResponse.data.success) {
      const orderId = createResponse.data.data.id;
      console.log(`๐ฆ ุทูุจ ุงููุญุต: ${orderId}`);
      
      // ูุญุงููุฉ ุชุญุฏูุซ ุงูุญุงูุฉ ูุน ุญุงูุฉ ุชุนูู ุฃููุงู
      console.log('\n1๏ธโฃ === ุงุฎุชุจุงุฑ ูุน ุญุงูุฉ ุชุนูู ===');
      
      const workingUpdateData = {
        status: 'ููุฏ ุงูุชูุตูู ุงูู ุงูุฒุจูู (ูู ุนูุฏุฉ ุงูููุฏูุจ)',
        notes: 'ุงุฎุชุจุงุฑ ุญุงูุฉ ุชุนูู',
        changedBy: 'db_check_working'
      };
      
      try {
        const workingResponse = await axios.put(
          `${baseURL}/api/orders/${orderId}/status`,
          workingUpdateData,
          {
            headers: {
              'Content-Type': 'application/json'
            },
            timeout: 60000
          }
        );
        
        console.log(`โ ุงูุญุงูุฉ ุงูุชู ุชุนูู ูุฌุญุช:`);
        console.log(`   Status: ${workingResponse.status}`);
        console.log(`   Success: ${workingResponse.data.success}`);
        
      } catch (error) {
        console.log(`โ ุญุชู ุงูุญุงูุฉ ุงูุชู ุชุนูู ูุดูุช: ${error.message}`);
        if (error.response) {
          console.log(`   Response:`, error.response.data);
        }
      }
      
      // ุงูุขู ุงุฎุชุจุงุฑ ูุน ุญุงูุฉ ุชุณุจุจ ูุดููุฉ
      console.log('\n2๏ธโฃ === ุงุฎุชุจุงุฑ ูุน ุญุงูุฉ ุชุณุจุจ ูุดููุฉ ===');
      
      const problematicUpdateData = {
        status: '3',
        notes: 'ุงุฎุชุจุงุฑ ุญุงูุฉ ุชุณุจุจ ูุดููุฉ',
        changedBy: 'db_check_problematic'
      };
      
      try {
        const problematicResponse = await axios.put(
          `${baseURL}/api/orders/${orderId}/status`,
          problematicUpdateData,
          {
            headers: {
              'Content-Type': 'application/json'
            },
            timeout: 60000,
            validateStatus: () => true
          }
        );
        
        console.log(`๐ ูุชูุฌุฉ ุงูุญุงูุฉ ุงููุดููุฉ:`);
        console.log(`   Status: ${problematicResponse.status}`);
        console.log(`   Data:`, problematicResponse.data);
        
        if (problematicResponse.status === 500) {
          console.log('\n๐ === ุชุญููู ุณุจุจ ุงูุฎุทุฃ ===');
          console.log('ุงููุดููุฉ ุนูู ุงูุฃุฑุฌุญ ูู ุฌุฏูู order_status_history');
          console.log('ุงูุฌุฏูู ูุฏ ูููู ุบูุฑ ููุฌูุฏ ุฃู ูู structure ูุฎุชูู');
        }
        
      } catch (error) {
        console.log(`โ ุฎุทุฃ ูู ุงูุญุงูุฉ ุงููุดููุฉ: ${error.message}`);
      }
      
    } else {
      console.log('โ ูุดู ูู ุฅูุดุงุก ุทูุจ ุงููุญุต');
    }
    
    console.log('\n๐ === ุงูุชูุตูุงุช ===');
    console.log('1. ุฅูุง ุฅูุดุงุก ุฌุฏูู order_status_history');
    console.log('2. ุฃู ุฅุฒุงูุฉ ุงูููุฏ ุงูุฐู ูุญุงูู ุงููุชุงุจุฉ ููู');
    console.log('3. ุฃู ุฅุถุงูุฉ try-catch ุญูู ุนูููุฉ ุฅุฏุฑุงุฌ ุงูุชุงุฑูุฎ');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error.message);
  }
}

checkDatabaseTables();
