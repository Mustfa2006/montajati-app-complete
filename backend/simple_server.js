#!/usr/bin/env node

// ===================================
// ุฎุงุฏู ุจุณูุท ูุงุฎุชุจุงุฑ ูุธุงู ุงูุฅุดุนุงุฑุงุช
// ===================================

require('dotenv').config();
const express = require('express');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 3003;

// ุฅุนุฏุงุฏุงุช ุฃุณุงุณูุฉ
app.use(cors());
app.use(express.json());

// ุฅุถุงูุฉ routes FCM
const fcmTokensRouter = require('./routes/fcm_tokens');
app.use('/api/fcm', fcmTokensRouter);

// ูุณุงุฑ ุงูุตุญุฉ
app.get('/health', (req, res) => {
  res.json({
    status: 'OK',
    message: 'ุฎุงุฏู ุงูุฅุดุนุงุฑุงุช ูุนูู ุจูุฌุงุญ',
    timestamp: new Date().toISOString()
  });
});

// ูุณุงุฑ ุงูุฌุฐุฑ
app.get('/', (req, res) => {
  res.json({
    message: 'ูุธุงู ุงูุฅุดุนุงุฑุงุช - ููุชุฌุงุชู',
    endpoints: {
      health: '/health',
      register_fcm: 'POST /api/fcm/register',
      test_notification: 'POST /api/fcm/test-notification',
      check_status: 'GET /api/fcm/status/:user_phone'
    }
  });
});

// ุจุฏุก ุงูุฎุงุฏู
app.listen(PORT, () => {
  console.log('๐ ุฎุงุฏู ุงูุฅุดุนุงุฑุงุช ูุนูู ุนูู ุงููููุฐ:', PORT);
  console.log('๐ ุงูุฑุงุจุท: http://localhost:' + PORT);
  console.log('โ ุฌุงูุฒ ูุงุณุชูุจุงู FCM tokens');
});

// ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก
process.on('uncaughtException', (error) => {
  console.error('โ ุฎุทุฃ ุบูุฑ ูุชููุน:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('โ ุฑูุถ ุบูุฑ ูุนุงูุฌ:', reason);
});
