// ===================================
// ุงุฎุชุจุงุฑ ูุฑุงูุจ ุงููุฎุฒูู ุงููุจุงุดุฑ
// ===================================

require('dotenv').config();
const InventoryMonitorService = require('./inventory_monitor_service');

async function testInventoryMonitor() {
  console.log('๐ฆ ุงุฎุชุจุงุฑ ูุฑุงูุจ ุงููุฎุฒูู ุงููุจุงุดุฑ...');
  
  try {
    const inventoryMonitor = new InventoryMonitorService();
    
    console.log('๐ ูุญุต ุฌููุน ุงูููุชุฌุงุช...');
    const result = await inventoryMonitor.monitorAllProducts();
    
    console.log('\n๐ ูุชุงุฆุฌ ุงููุฑุงูุจุฉ:');
    console.log('ุงููุฌุงุญ:', result.success);
    console.log('ุงูุฑุณุงูุฉ:', result.message);
    
    if (result.results) {
      console.log('\n๐ ุงูุฅุญุตุงุฆูุงุช:');
      console.log('- ุฅุฌูุงูู ุงูููุชุฌุงุช:', result.results.total);
      console.log('- ููุฏ ุงููุฎุฒูู:', result.results.outOfStock);
      console.log('- ูุฎุฒูู ููุฎูุถ:', result.results.lowStock);
      console.log('- ูุฎุฒูู ุทุจูุนู:', result.results.normal);
      console.log('- ุฅุดุนุงุฑุงุช ูุฑุณูุฉ:', result.results.sentNotifications);
    }
    
    if (result.alerts && result.alerts.length > 0) {
      console.log('\n๐จ ุงูุชูุจููุงุช ุงููุฑุณูุฉ:');
      result.alerts.forEach((alert, index) => {
        console.log(`${index + 1}. ${alert.product_name} - ${alert.type} - ูุฑุณู: ${alert.sent}`);
      });
    }
    
    console.log('\nโ ุงูุชูู ุงุฎุชุจุงุฑ ูุฑุงูุจ ุงููุฎุฒูู');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ูุฑุงูุจ ุงููุฎุฒูู:', error.message);
    console.error('ุงูุชูุงุตูู:', error);
  }
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
testInventoryMonitor();
